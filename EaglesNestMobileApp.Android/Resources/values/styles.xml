<?xml version="1.0" encoding="utf-8" ?>
<!--***************************************************************************
* CODING STANDARDS
* styles.xml
* 
* Tabs: 4 (replace with spaces)
*
* Block headers will be displayed as such:
*   HEADER
* Sub-headers:
*   <Sub Header>
*
****************************************************************************-->

<!--***************************************************************************
* HELP
* styles.xml
*
* The status bar color will only be set if Minimum Android to Target is set to
* Android 5.0 or greater. (Project->Properties->)
*
* android:textSize must contain a value. An error will be thrown if contains
* @string/...
*
* Example:
*   CORRECT:    <item name="android:textSize">16sp</item>
*   INCORRECT:  <item name="android:textSize">@string/my_font_size</item>
****************************************************************************-->

<resources>
    <!-- THEME -->
    <style name="AppCompatLightTheme" parent="Theme.AppCompat.Light.NoActionBar">
        <!-- <item name="android:windowNoTitle">true</item> -->
        <!-- <item name="android:windowActionBar">false</item> -->
        <item name="windowActionModeOverlay">true</item>
        <!-- <item name="android:windowContentTransitions">true</item> -->
        
        <!-- <Colors> -->
        <item name="colorPrimary">@color/primary</item>
        <item name="colorPrimaryDark">@color/primary_dark</item>
        <item name="colorAccent">@color/accent</item>
        <item name="android:textColorPrimary">@color/primary_text</item>
        <item name="android:textColorSecondary">@color/secondary_text</item>
        <!--<item name="android:textColorHint">####</item>-->
        <!-- statusBarColor is automatically set to colorPrimaryDark -->
        <!--<item name="android:statusBarColor">####</item>-->
        <!-- Android says: When you customize the navigation and status bars,
             either make them both transparent or modify only the status bar.
             The navigation bar should remain black in all other cases. -->
        <!--<item name="android:navigationBarColor">####</item>-->
        <item name="android:windowBackground">@color/window_background</item>

        <!-- colorControlNormal controls the ‘normal’ state of components such
             as an unselected EditText, and unselected Checkboxes and RadioButtons-->
        <!--<item name="colorControlNormal">####</item>-->
        <!-- colorControlActivated overrides colorAccent as the activated
             or checked state for Checkboxes and RadioButtons -->
        <!--<item name="colorControlActivated">####</item>-->
        <!-- colorControlHighlight controls the ripple coloring -->
        <!--<item name="colorControlHighlight">####</item>-->
        <!--<item name="colorSwitchThumbNormal">####</item>-->
    </style>
    
    <!-- BUTTON STYLES -->
    <style name="ModBorderlessButton">
        <!--<item name="android:padding">8dp</item>-->
        <item name="android:layout_width">wrap_content</item>
        <item name="android:layout_height">36dp</item>
        <item name="android:minWidth">56dp</item>
        <item name="android:padding">8dp</item>
        <item name="android:background">@drawable/borderless_button</item>
    </style>
    
    <!-- To use the default Borderless Button Widget, set
         parent="Widget.AppCompat.Button.Borderless" in the button style -->
    <!-- Other attributes can be set for modification:
         name="colorControlHighlight">?android:colorControlHighlight
         name="android:background">?android:attr/selectableItemBackground -->

    <!-- TEXT INPUT STYLES -->
    <style name="ModLoginTextInput">
        <item name="colorControlActivated">@color/primary</item>
        <item name="colorControlHighlight">@color/primary</item>
    </style>

    <!-- FONT STYLES -->
    <!-- <List Component> -->
    <style name="ModListItemSingleLineText">
        <item name="android:fontFamily">@string/roboto_regular</item>
        <item name="android:textSize">16sp</item>
    </style>
    <style name="ModListItemPrimaryText">
        <item name="android:textColor">#FFFFFF</item>
        <item name="android:fontFamily">@string/roboto_medium</item>
        <!-- android:textSize
             This MUST contain a hard-coded value. It cannot be @string/... -->
        <item name="android:textSize">16sp</item>
    </style>
    <style name="ModListItemSecondaryText">
        <item name="android:textColor">#FFFFFF</item>
        <item name="android:fontFamily">@string/roboto_regular</item>
        <item name="android:textSize">14sp</item>
    </style>
  <!-- TextView Styles-->
  <style name="ModFoodHeader">
    <item name="android:background">#086ED4</item>
    <item name="android:textColor">@color/white</item>
    <item name="android:layout_width">match_parent</item>
    <item name="android:layout_height">wrap_content</item>
    <item name="android:gravity">left</item>
    <item name="android:textSize">30dp</item>
    <item name="android:layout_marginTop">10dp</item>
  </style>

    <style name="ModAttendanceCard">
        <item name="android:textSize">16dp</item>
        <item name="android:layout_marginLeft">8dp</item>
    </style>
  
  <!-- View Styles-->
  <style name="ModViewSpacing">
    <item name="android:layout_width">match_parent</item>
    <item name="android:layout_height">10dp</item>
  </style>

  <style name="ModTextViewFullUnderline">
    <item name="android:layout_width">match_parent</item>
    <item name="android:layout_height">1dp</item>
    <item name="android:background">@color/white</item>
  </style>

  <style name="ModTextViewUnderline">
    <item name="android:layout_width">250dp</item>
    <item name="android:layout_height">1dp</item>
    <item name="android:background">@color/white</item>
    <item name="android:layout_gravity">center_horizontal</item>
  </style>
</resources>
